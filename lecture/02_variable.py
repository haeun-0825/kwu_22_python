# 1. 자료형(Data Type)
#  - 동적 자료형 언어(동적 타이핑)
#  - Python은 모두 객체
#    java
#      - 프리미티브 타입 8개
#      - 레퍼런스 타입(객체)
#  1) 문자열(str)      : "Hello", 'Hi'
#  2) 정수형(int)      : 3, -1, 0
#  3) 실수형(float)    : 3.14, 0.0, -2.2
#  4) 논리형(boolean)  : True, False
#  * 다양한 자료형을 사용하는 이유?
#    → 1) 메모리(저장공간)을 효율적으로 사용하기 위함
#      자료형별로 저장할 수 있는 크기의 범위가 다름
#    → 2) 데이터 구조 맞춤 저장 및 효율적인 연산
#    → 3) 데이터 목적별 기능 제공! ex) 중복값을 허용하지 않는다-목적


# 2. 문자열형(str)
#  - 다중 문자열 작성하실 때 → ''' ''' 또는 """ """
#  - 이스케이프 문자 → \ + 문자, \t(tab), \n(한 줄 개행)

# Tip
#   - Python은 Char형(문자형) 존재 X
#   - JAVA, C에서는 ''(Char), ""(str)
#   - Python은 '', "" 모두 str형(문자열형)



# 3. 변수(Variable 또는 Field-객체 쪽에만 사용)
#   - 하나의 값(!!KeyPoint!!)을 저장할 수 있는 메모리 공간 *시험에 나옴* 변수의 정의를 서술하시오.
#   - 문법: 변수명 대입연산자 값
#     예)    num     =     4
#   - 변수만 만들고 값은 아직 안넣고 싶은 경우
#       예) JAVA → int num;
#       예) Python → num = None (X 이런 경우를 만들지 말자)
#     Tip: None 사용 금지!



# 4. 형 변환(Type Casting)
#   가. int() : 정수형으로 변환
#   나. float() : 실수형으로 변환
#   다. str() : 문자열형으로 변환

# Tip
#   - 작은 자료형 → 큰 자료형  예) int → float (문제X)
#       예) 3 → 3.0 
#   - 큰 자료형 → 작은 자료형  예) float → int (값의 손실 조심)
#       예) 3.14 → 3 (0.14 손실 발생)



# 5. 상수
#  - 변하지 않는 값
#  - 선언 및 초기화 후 값 변경 불가
#  - 예외로 변수이름을 모두 대문자 사용
#      예) MAX_VALUE = 3
#  - Python은 상수 문법 존재X

# 6. 동적 출력
print("123")  # 하드 코딩(고정 값), 지양

student_grade = 3
print(student_grade)  # 3 출력
